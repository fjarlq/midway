Relay-Version: version B 2.10 5/3/83; site utzoo.UUCP
Posting-Version: version B 2.10.2 9/18/84; site ucbvax.ARPA
Path: utzoo!watmath!clyde!burl!ulysses!ucbvax!yee
From: yee@ucbvax.ARPA (Peter E. Yee)
Newsgroups: net.sources
Subject: Midway (Part 2 of 2)
Message-ID: <4345@ucbvax.ARPA>
Date: Wed, 23-Jan-85 22:12:38 EST
Article-I.D.: ucbvax.4345
Posted: Wed Jan 23 22:12:38 1985
Date-Received: Thu, 24-Jan-85 08:23:13 EST
Distribution: net
Organization: University of California at Berkeley
Lines: 1090

This is part 2 of 2 of the Midway distribution.  See part 1 for comments.

#	This is a shell archive.
#	Remove everything above and including the cut line.
#	Then run the rest of the file through sh.
-----cut here-----cut here-----cut here-----cut here-----
#!/bin/sh
# shar:	Shell Archiver
#	Run the following text with /bin/sh to create:
#	midway/Midway.doc
#	midway/externs.h
#	midway/globals.h
#	midway/makefile
# This archive created: Wed Jan 23 19:01:04 1985
cat << \SHAR_EOF > midway/Midway.doc
MIDWAY(PUBLIC)							MIDWAY(PUBLIC)

USAGE
	% Midway [-b bad weather]

HISTORY

	   In the early summer of 1942 the Imperial Japanese Navy was
	full of pride.  In the first six months of war they had already
	conquered most of Asia and Micronesia.  There seemed to be no
	stopping the "Yellow Tide" as it was called in the United
	States.  In the summer of 1942, then, the Imperial War Machine
	was found to be casting its lustful eye upon the Western
	Pacific and even the West coast of North America.

	   The American Pacific Fleet had been nearly annihilated at
	Pearl Harbor and could muster little resistance to a Japanese
	offensive.  Against the 11 Battleships of the Japanese Navy,
	the United States had none.  Against the 12 Heavy Cruisers, 7.
	Light Cruisers: 9 to 1.  And of the most powerful but yet
	unappreciated ships, the Japanese had 8 Aircraft Carriers to
	the United States' 3.

	   Nevertheless, the 3 US Carriers were a perpetual thorn in the
	Japanese Lion's side.  At the Battle of Coral Sea in April, the
	US Carriers Enterprise, Yorktown, and Lexington put two Japanese
	fleet Carriers out of action and sank the light Carrier Shoho.
	The Lexington was sunk, but the Japanese had suffered their
	first set-back.

	   In an effort to crush the American Carriers once and for all,
	Admiral Yamamoto assembled the largest fleet the world had ever
	seen, and set sail for Midway Island, a morsel to eat on the way
	to California.  His flagship was the gigantic Yamato, still the
	largest Battleship ever built.  Admiral Nagumo in the Akagi had
	command of 4 fleet Carriers and was in charge of reducing the
	small Sand Island fortress to a smoking seashell.

	   The future would have been grim for the American Pacific fleet
	had not Admiral Nimitz been eating his Wheaties.  For several
	months his CS majors had been busy cracking the Japanese code.
	Thus, he knew the approximate location of the coming attack and
	deployed his three Carriers and their escort ships north of Midway.

	   On the morning of June 3, 1942 a PBY Catalina from Midway sighted
	the Light Cruiser Jintsu and a high level bombing attack with B-17's
	was commenced.  Not all the B-17's found the Jintsu but turned
	north.  To their surprise they found Admiral Nagumo's 4 Aircraft
	Carriers and dropped 20,000 lbs. of bombs without scoring a single
	hit.  They killed a lot of fish though!

	   Nagumo armed all of his Mitsubishi 97 bombers with 500 lb. bombs
	and sent wave after wave to attack Midway Island.  Midway somehow
	survived and Nagumo needed another attack to finish the job.  He
	had no knowledge of the nearby American Carriers which were at that
	moment launching planes for his own Akagi, Kaga, Soryu, and Hiryu.
	He ordered his reserve planes to rearm with bombs for Midway while
	the first attack squadron was still flying home.  He had been saving
	these planes for any American ships which might have been discovered
	during the bombardment of Midway.  Another fateful decision he made
	was to wait for the first wave to land and refuel before launching his
	second attack.  Thus all of his planes were on deck being refueled and
	rearmed when the Yorktown's torpedo and dive bombers poured out of
	the sky.

	   The Akagi, Kaga, and Soryu were reduced to burning hulks within
	minutes, and Nagumo went down with his ship.  Only the little Hiryu
	was missed in the thunderous assault and could launch planes.  This
	she did and the pilots followed the returning American planes home
	to the Yorktown.  The Yorktown with only two Cruisers for support
	fell prey to three 500 lb. bombs and was slowed from 21 to 6 knots.
	The Enterprise launched her 4 remaining Douglass SBD Dauntless dive
	bombers for the Hiryu.  By some miracle, all four found the Hiryu
	and scored hits.  The Hiryu had to be scuttled and the Captain
	committed Hara-Kiri.

	  The Yorktown was hit by two aerial torpedoes by another squadron
	from the Hiryu and started to list severely.  Admiral Fletcher
	ordered his crew to abandon ship but the Yorktown refused to
	sink.  He sent salvage crews on board and ordered a tug from
	Pearl Harbor to tow the Yorktown to port.  The Americans would
	have won a tremendous victory at Midway instead of their merely
	wonderful victory had not a submarine torpedoed the listing
	Yorktown and sent her to the bottom.  As it was, Yamamoto
	was struck a monumental blow.  He realized even the Godzilla Yamato
	was defenseless without air cover.  He turned his fleet back to
	Japan and faced the wrath of the Emperor.  

EPILOGUE
	   
	   The United States built a formidable Navy in two years which
	was composed of some old Battleships and about 100 fleet and light
	Carriers.  The largest sea battle of the war was fought in the
	Phillippines at Leyte Gulf in 1944.  The Yamato's sister ship
	was torpedoed 12 times by Carrier planes and sent to the bottom.
	The Enterprise was the only American Carrier from the original 4
	to survive the entire war.  She fought in every major battle from
	Coral Sea to Leyte Gulf.  "Haul ass with Halsey," was the old war
	cry.

INSTRUCTIONS

	   When you play Midway, you are in command of a ship which
	can move, fire its big guns, and fire its anti-aircraft guns.
	If you have choosen an Aircraft Carrier, you will have fighters,
	torpedo bombers, and dive bombers to launch.

	Launching Planes:
	   
	   c: Combat Air Patrol:
	      
		 You can send as many fighters as you like on
		 patrol around the ship.  When your ship is attacked,
		 they will take a big bite out of the attackers before
		 they get you.

	   f: Launch Fighters:
		 
		 It is a good idea to send fighter cover first when
		 launching an attack on an enemy carrier, otherwise
		 next to nothing will get through her CAP.  When
		 you launch fighters you will be asked, "Target? ",
		 at which point you type the name of the enemy ship
		 you wish to attack.  The names must be capitalized,
		 just like they are printed on the screen.

	   b: Launch Dive Bombers:

		 Bombers are good to launch next.  When they get within
		 four squares of their target, they drop bombs which
		 have a 50/50 chance of doing damage.  A 'square'
		 corresponds to 1 nautical mile.  Dive bombers are
		 ineffective against fighters.

	   t: Launch Torpedo Bombers:
		 
		 Torpedo Bombers launch their fish at a range of 7 squares
		 and are fun because they usually hit everything in sight.
		 Torpedo Planes have rear gunners who can shoot down a
		 fighter now and then.

	   s: Launch Scout:
		
		Scout planes are the eyes of the fleet.  They spot the
		bad guys before they spot you.  It is necessary to
		spot a target before you can attack it!  Scout planes
		subtract from your Torpedo Planes.  When launching scout
		planes, the program will ask you for a course.  You
		should respond by typing a number from 0 to 360, where
		0 is north and 90 is east, etc.

	   @: Launch Random Scouts:

		You can send as many scouts as you like on random
		scouting missions.  They fly a random walk.

	   r: Recall Planes:

		If you decide that it would be better to break radio
		silence than to let your planes fly on their way, you
		can signal them to return home with this command.


	Recovering Planes:

	   Planes are supposed to come back automatically after attacking
	   their target.   If their mother ship has been sunk, they will
	   try to land on their flagship.

	Shooting down planes:

	   If you think the bad guys are getting a little too close, you
	   can fire your anti-aircraft guns with the direction keys

				yu  k  io
				  \ | /
				h - + - l
				  / | \
				nm  j  ,.

	   A '*' that hits adjacent to any plane (+ or -) destroys it.
	   Example:
				  +
				 +* A hit!
			^	+
			|	 +
			|	  +   * A miss!
		       |||
			|

	   Some ships have more anti-aircraft guns than others, naturally.		
	Moving:
	   
	   Ships move at the rate of one square per turn.  Scout planes
	   move a fast 15 squares per turn, and heavy attack planes
	   lumber along at leisurely 10 squares per turn.  Scout planes
	   discover enemy ships if they fly within 50 squares of one.
	   Attacking planes will do the same if within 30 squares.
	   Ships don't spot each other until they are 25 squares apart.
	   It's a big ocean out there!

	   To steer your ship, use the direction keys:

				YU  K  IO
				  \ | /
				H - + - L
				  / | \
				NM  J  <>
	  
	Flagships:

	   The first ship in each task force is the flagship.  All
	   the other ships follow it around.  A nice reason to play
	   one is that if you get sunk, you can transfer your flag.
	   A not-so-nice reason is that enemies shoot at flagships
	   first.  When a flagship is sunk the next ship in line,
	   if there is one left, becomes the flagship.

	Firing Guns:
	   
	   Battleships and Cruiser and some Carriers have big guns
	   which can be used against other surface vessels.  To fire
	   your guns, type a carriage return.  If there is an enemy
	   flagship within range (25 squares), he will feel your teeth.

	Automatic Mode:
	   
	   If you think the battle is going slowly, type an 'a' to put
	   the game into automatic mode.  Your ship will continue on
	   its present course and the game will progress rather quickly
	   until you resume manual control with an interrupt (^?).

	   You can turn off the screen for even faster automatic mode
	   with the command 'A'.  This 'silent running' mode is also
	   terminated with an interrupt (^?).

	   If you type 'w' then the program will go into 'A' super-crunch
	   mode until something is printed on the 'notes' portion of
	   the screen.  This command lets you go into automatic mode
	   without the fear of being sunk before you can type an
	   interrupt.  'w' will also be terminated by a interrupt (^?)
	   in case you want to look around.

	Scanning:

	   If you want to look at another ship and watch it sink or
	   something, type 'S'.  It will ask you for the ship's name.
	   The data at the bottom of the screen as well as the display
	   will show the scanned ship's current status.

	Display:
	   
	   The lovely display has 10 different scales, 0-9.  Each higher
	   scale shows twice as much ocean as the one preceding it.
	   Scale 0 shows things as they really are, one space on the screen
	   is one square wide.  At scale 9, one space on the screen is 512
	   squares wide.  All ship's names are printed on scales lower
	   than 4.  Only enemy ship's names are printed over scale 3.
	   Also, only flagships are printed over scale 3.
	   There are numerous other things that depend on the chosen
	   scale, but I'm getting tired of writing this doc file.
	      
	   The display shows how many bomb or shell hits the ship you are
	   looking at can take under the label 'hits.'  The number of torpedo
	   hits it can take is recorded under the label 'torps.'  The
	   ship's points (for sinking enemy ships) and her row, col are also
	   printed.

	   I know I forgot something.

       Statistical Data:

	  At the beginning of the game, every Carrier of the Japanese
	  Imperial Navy launches planes for Midway.  This combined force
	  numbers
			79 Fighters
			121 Dive Bombers
			130 Torpedo Bombers

	  for a total assault of 330 planes.  It is amazing that Midway
	  can survive it at all!  Incidentally, when all the planes are in
	  the air and attacking something, the program has to move over 400
	  planes, ships, and torpedoes each turn!  A programming marvel!


      Midway Quick Reference Command Table:

		'h':
		'l':
		'j':		/* flack */
		'k':
		'i': 'o':
		'.': ',':
		'n': 'm':
		'y': 'u':

		'H':
		'L':
		'J':		/* move */
		'K':
		'I': 'O':
		'>': '<':
		'N': 'M':
		'Y': 'U':

		'\n':		/* fire guns */
		
		'c':
		's':
		't':		/* launch */
		'f':
		'b':
		'@':
		'r':

		'a':		/* automatic */
		'A':		/* silent super-crunch mode */
		'w':		/* wait for action */
		
		'0':
		'1':
		'2':
		'3':
		'4':
		'5':		/* scales */
		'6':
		'7':
		'8':
		'9':

		'S':		/* scan */

		'^L':		/* redraw */

		'q':		/* play rogue */


	Midway Symbol Table:

		
		'+':		/* American planes */
		'-':		/* Japanese planes */
		'?':		/* friendly scout planes */

		'*':		/* anti-aircraft explosions */
		'#':		/* bomb, shell or torpedo explosions */
		'.':		/* unexploded topedoes */


	Riggle's Book of Fighting Ships: 


	 ^   	   -/	     		Aircraft: 24 to 78.
	/+\  	 /++|	  /--\		
	|+I  	/++//	  |+++>		Carriers: 7000 to 27000 tons.
	|+I  	|+// 	  \--/		Guns: 0 to 3.
	\_/  	 -   			AA: 2 to 4.

	

	  ^    	    /  			Aircraft: 1 to 3.
	  |    	  //   	/-- 
	 |||   	////   	---->		Battleships: 29000 to 73000 tons.
	|||||  	///    	\--  		Guns: 7 to 10
	\|||/  	\//    			AA: 2 to 3.



	  ^    
	  |    	   /   	 -     
	  |    	  /    	---->  		Heavy Cruisers: 9000 to 10000 tons.
	 |||   	//     	 -     		Guns: 3 to 4.
	  |    	//     			AA: 1 to 2.



	     
	  ^    	   '   
	  |    	  /    	 -->		Light Cruisers: 5000 to 6000 tons.
	  |    	 /     			Guns: 1 to 2.
					AA: 1.



	 xxxx				Aircraft: 90.
	x\-/x
	x|o|x				Island:	250000 tons.
	x/-\x				Guns: 5.
	xxxxx				AA: 10.


AUTHOR
	Dave Riggle

BUGS
	Interrupting automatic mode messes up the screen sometimes.  Use ^L
to fix it.
SHAR_EOF
if test 13186 -ne "`wc -c midway/Midway.doc`"
then
echo shar: error transmitting midway/Midway.doc '(should have been 13186 characters)'
fi
cat << \SHAR_EOF > midway/externs.h

#include <stdio.h>
#include <curses.h>
#include <signal.h>

#define MIDWAY 11
#define JAPANESE 12
#define MAXSHIPS 52
#define HALFROW 11
#define HALFCOL 23
#define MAXCOLS 48
#define MAXROWS 24
#define AMFLEET 3
#define JAPFLEET 7


#define Japanese(a) (a >= JAPANESE)
#define max(a,b) ((a) > (b) ? (a) : (b))
#define min(a,b) ((a) < (b) ? (a) : (b))
#define abs(a) ((a) < 0 ? -(a) : (a))
#define rnd(x) ((x) ? (rand() >> 6) % (x) : 0)
#define intercept(here, there) angle(shiplist[here].row - shiplist[there].row, shiplist[there].col - shiplist[here].col)
#define setcourse(planes, ship) angle(planes -> row - shiplist[ship].row, shiplist[ship].col - planes -> col)
#define aimflack(ship, planes) angle(shiplist[ship].row - planes -> row, planes -> col - shiplist[ship].col)

#define SUPER -10
#define SCOUT -1
#define TBF 0
#define SBD 1
#define F4F 2
#define CV  3
#define BB  4
#define HC  5
#define LC  6
#define FT  7

#define CAP 	 8
#define RECOVER  9
#define ZEROHOUR 5
#define ZEROMIN 34
#define ZERODAY  3

extern struct torpedo {
	int row, col;
	int course;
	int fromship;
	int timeleft;
	struct torpedo *next_torp;
};
extern struct torpedo *amfish, *japfish;

extern struct ship {
	int row, col;
	int course;
	int type;
	int f4f, sbd, tbf;
	int hits, torps;
	int guns, ack_ack;
	int flagship;
	int launching;
	int points, value;
	char *name;
	int turrets, calibre, aa, belt, deck;
};

extern struct squadron {
	int row, col;
	int course;
	int type;
	int from;
	struct squadron *s_next, *previous;
	int planes;
	int fuel;
	int attack;
};

extern char *describe[8];
extern char *overviews[8];
extern int Fuel[3];
extern int capplanes[MAXSHIPS];
extern int scaler[10];
extern int amtable[AMFLEET + 1];
extern int japtable[JAPFLEET + 1];
extern int clock, scale, player, virtual;
extern int scroll, automatic, viewrow, viewcol;
extern int sighted[MAXSHIPS];
extern int firedflack[MAXSHIPS];
extern int firedguns[MAXSHIPS];
extern struct squadron *american, *japanese, *amscouts, *japscouts;
extern WINDOW *view, *bridge, *date, *panel1, *panel2, *stats, *notes, *hole;
extern char *jmess[9];
extern char *amess[5];
extern char *Reef[6];
extern char *Sand_Island[18];
extern char *Eastern_Island[8];

char shiphit();
char *daytime();
struct squadron *catapult();

extern char shapes[5][8][5][6];
extern struct ship shiplist[MAXSHIPS];
SHAR_EOF
if test 2344 -ne "`wc -c midway/externs.h`"
then
echo shar: error transmitting midway/externs.h '(should have been 2344 characters)'
fi
cat << \SHAR_EOF > midway/globals.h
#include <stdio.h>
#include <curses.h>
#include <signal.h>

#define MIDWAY 11
#define JAPANESE 12
#define MAXSHIPS 52
#define HALFROW 11
#define HALFCOL 23
#define MAXCOLS 48
#define MAXROWS 24
#define AMFLEET 3
#define JAPFLEET 7


#define Japanese(a) (a >= JAPANESE)
#define max(a,b) ((a) > (b) ? (a) : (b))
#define min(a,b) ((a) < (b) ? (a) : (b))
#define abs(a) ((a) < 0 ? -(a) : (a))
#define rnd(x) ((x) ? (rand() >> 6) % (x) : 0)
#define intercept(here, there) angle(shiplist[here].row - shiplist[there].row, shiplist[there].col - shiplist[here].col)
#define setcourse(planes, ship) angle(planes -> row - shiplist[ship].row, shiplist[ship].col - planes -> col)
#define aimflack(ship, planes) angle(shiplist[ship].row - planes -> row, planes -> col - shiplist[ship].col)

#define SUPER -10
#define SCOUT -1
#define TBF 0
#define SBD 1
#define F4F 2
#define CV  3
#define BB  4
#define HC  5
#define LC  6
#define FT  7

#define CAP 	 8
#define RECOVER  9
#define ZEROHOUR 5
#define ZEROMIN 34
#define ZERODAY  3

struct torpedo {
	int row, col;
	int course;
	int fromship;
	int timeleft;
	struct torpedo *next_torp;
} *amfish, *japfish;

struct ship {
	int row, col;
	int course;
	int type;
	int f4f, sbd, tbf;
	int hits, torps;
	int guns, ack_ack;
	int flagship;
	int launching;
	int points, value;
	char *name;
	int turrets, calibre, aa, belt, deck;
};

struct squadron {
	int row, col;
	int course;
	int type;
	int from;
	struct squadron *s_next, *previous;
	int planes;
	int fuel;
	int attack;
};

char *describe[8] = {"Torpedo Bombers", "Dive Bombers", "Fighters", "Carrier", "Battleship", "Heavy Cruiser", "Light Cruiser", "Island"};
char *overviews[8] = {"TBF", "SBD", "F4F", "CV", "BB", "HC", "LC", "xx"};
int Fuel[3] = {175, 175, 140};
int capplanes[MAXSHIPS];
int scaler[10] = {1, 2, 4, 8, 16, 32, 64, 128, 256, 512};
int amtable[AMFLEET + 1] = {0, 8, 11, MAXSHIPS};
int japtable[JAPFLEET + 1] = {12, 19, 28, 37, 43, 47, 48, MAXSHIPS};
int clock, scale, player, virtual, wizard;
int scroll = -1, automatic, viewrow, viewcol;
int sighted[MAXSHIPS];
int firedflack[MAXSHIPS];
int firedguns[MAXSHIPS];
struct squadron *american, *japanese, *amscouts, *japscouts;
WINDOW *view, *bridge, *date, *panel1, *panel2, *stats, *notes, *hole;
char *jmess[9] = {
	"\nThe Japanese fleet is divided into seven task forces:\n",
	"0) Main Force \t\t\t\t(Admiral Yamamoto)",
	"1) First Carrier Striking Force \t(Admiral Nagumo)",
	"2) Midway Invasion Force \t\t(Admiral Kondo)",
	"3) Alutian Screen \t\t\t(Admiral Taskasu)",
	"4) Second Carrier Striking Force\t(Admiral Kakuta)",
	"5) Midway Occupation Transports \t(Admiral Tanaka)",
	"6) Occupation Support Group \t\t(Admiral Kurita)",
	0
};
char *amess[5] = {
	"\nThe American fleet is divided into two task forces and Midway:\n",
	"0) Task Force 16\t\t\t(Admirals Halsey and Spruance)",
	"1) Task Force 17\t\t\t(Admiral Fletcher)",
	"2) Midway Island",
	0
};
char *Reef[6] = {
	"         xxxxxx          ",
	"     xxxxxxxxxxxxx       ",
	"  xxxxx          xxx     ",
	"xxx                xxx   ",
	"                    xxxxx",
	"    xx                xxx"
};
char *Sand_Island[18] = {
	"x             xx              ",
	"x                             ",
	"x                             ",
	"x                             ",
	"x                             ",
	"x                  xxxxxx xxx ",
	"x              xxxxxxxxxxxx   ",
	"x  xx         xxxxxxxxxxxx    ",
	"x              xMidwayxxx     ",
	"x             xxxxxxxxxx      ",
	"x             xxIslandxxxx    ",
	"x             xxxxxxxxxxxx    ",
	" x           xxxxxxxxxx       ",
	" x          xxxxxxxxx   xxxxx ",
	"  x       xxxxxxxxxx  xx      ",
	"  xx       xxxxxxx  xx        ",
	"   xx             xx          ",
	"     xxxxxxxxxxxxx            "
};
char *Eastern_Island[8] = {
	"               xx      ",
	"  x           xxx     x",
	"x xx         xxxx     x",
	"            xxxxxx    x",
	"  x      xxxxxxxxxx  x ",
	"  x      xxxxxxxxxx  x ",
	"   x                x  ",
	"    xxxxxxxxxxxxxxxx   "
};

char shiphit();
char *daytime();
struct squadron *catapult();

char shapes[5][8][5][6] = {
	"  ^  ",
	" /+\\ ",
	" |+I ",
	" |+I ",
	" \\_/ ",

	"   -/",
	" /++|",
	"/++//",
	"|+// ",
	" -   ",
	
	"     ",
	"/--\\ ",
	"|+++>",
	"\\--/ ",
	"     ",

	" -   ",
	"|++\\ ",
	"\\\\++\\",
	" \\\\+|",
	"   -\\",

	" /-\\ ",
	" I+| ",
	" I+| ",
	" \\+/ ",
	"  v  ",

	"   - ",
	" //+|",
	"//++/",
	"|++/ ",
	"/-   ",
	
	"     ",
	" /--\\",
	"<+++|",
	" \\--/",
	"     ",

	"\\-   ",
	"|+\\\\ ",
	"\\++\\\\",
	" \\++|",
	"   - ",

	"  ^  ",
	"  |  ",
	" ||| ",
	"|||||",
	"\\|||/",

	"    /",
	"  // ",
	"//// ",
	"///  ",
	"\\//  ",

	"     ",
	"/--  ",
	"---->",
	"\\--  ",
	"     ",

	"/\\\\  ",
	"\\\\\\  ",
	"\\\\\\\\ ",
	"  \\\\ ",
	"    \\",

	"/|||\\",
	"|||||",
	" ||| ",
	"  |  ",
	"  v  ",

	"  //\\",
	"  ///",
	" ////",
	" //  ",
	"/    ",

	"     ",
	"  --\\",
	"<----",
	"  --/",
	"     ",

	"\\    ",
	" \\\\  ",
	" \\\\\\\\",
	"  \\\\\\",
	"  \\\\/",

	"  ^  ",
	"  |  ",
	"  |  ",
	" ||| ",
	"  |  ",

	"     ",
	"   / ",
	"  /  ",
	"//   ",
	"//   ",

	"     ",
	" -   ",
	"---->",
	" -   ",
	"     ",

	"\\\\   ",
	"\\\\   ",
	"  \\  ",
	"   \\ ",
	"     ",

	"  |  ",
	" ||| ",
	"  |  ",
	"  |  ",
	"  v  ",

	"   //",
	"   //",
	"  /  ",
	" /   ",
	"     ",

	"     ",
	"   - ",
	"<----",
	"   - ",
	"     ",

	"     ",
	" \\   ",
	"  \\  ",
	"   \\\\",
	"   \\\\",

	"     ",
	"  ^  ",
	"  |  ",
	"  |  ",
	"     ",

	"     ",
	"   ' ",
	"  /  ",
	" /   ",
	"     ",

	"     ",
	"     ",
	" --> ",
	"     ",
	"     ",

	"     ",
	" \\   ",
	"  \\  ",
	"   ' ",
	"     ",

	"     ",
	"  |  ",
	"  |  ",
	"  v  ",
	"     ",

	"     ",
	"   / ",
	"  /  ",
	" '   ",
	"     ",

	"     ",
	"     ",
	" <-- ",
	"     ",
	"     ",

	"     ",
	" '   ",
	"  \\  ",
	"   \\ ",
	"     ",

	" xxxx",
	"x\\-/x",
	"x|o|x",
	"x/-\\x",
	"xxxxx",

	" xxxx",
	"x\\-/x",
	"x|o|x",
	"x/-\\x",
	"xxxxx",

	" xxxx",
	"x\\-/x",
	"x|o|x",
	"x/-\\x",
	"xxxxx",

	" xxxx",
	"x\\-/x",
	"x|o|x",
	"x/-\\x",
	"xxxxx",

	" xxxx",
	"x\\-/x",
	"x|o|x",
	"x/-\\x",
	"xxxxx",

	" xxxx",
	"x\\-/x",
	"x|o|x",
	"x/-\\x",
	"xxxxx",

	" xxxx",
	"x\\-/x",
	"x|o|x",
	"x/-\\x",
	"xxxxx",

	" xxxx",
	"x\\-/x",
	"x|o|x",
	"x/-\\x",
	"xxxxx",

};

struct ship shiplist[MAXSHIPS] = {
	760, 1240, 225, CV, 26, 37, 15, 5, 4, 0, 4, 0, 0, 0, 20,
		"Enterprise", 0, 0, 16, 2, 1,
	760, 1250, 225, CV, 26, 37, 15, 5, 4, 0, 4, 0, 0, 0, 20,
		"Hornet", 0, 0, 16, 2, 1,
	760, 1230, 225, HC, 0, 0, 0, 5, 4, 3, 2, 0, 0, 0, 10,
		"New Orleans", 9, 8, 8, 5, 5,
	750, 1240, 225, HC, 0, 0, 0, 5, 4, 3, 2, 0, 0, 0, 10,
		"Minneapolis", 9, 8, 8, 5, 5,
	770, 1240, 225, HC, 0, 0, 0, 5, 4, 3, 2, 0, 0, 0, 10,
		"Vincennes", 9, 8, 8, 5, 5,
	750, 1250, 225, HC, 0, 0, 0, 3, 2, 3, 1, 0, 0, 0, 9,
		"Northampton", 9, 8, 4, 3, 2,
	770, 1250, 225, HC, 0, 0, 0, 3, 2, 3, 1, 0, 0, 0, 9,
		"Pensacola", 10, 8, 4, 3, 2,
	760, 1260, 225, LC, 0, 0, 0, 3, 2, 2, 1, 0, 0, 0, 6,
		"Atlanta", 9, 6, 4, 3, 2,
	
	790, 1250, 225, CV, 25, 37, 13, 5, 4, 0, 4, 8, 0, 0, 20,
		"Yorktown", 0, 0, 16, 2, 1,
	790, 1240, 225, HC, 0, 0, 0, 5, 4, 3, 2, 8, 0, 0, 10,
		"Astoria", 9, 8, 8, 5, 5,
	790, 1260, 225, HC, 0, 0, 0, 3, 2, 3, 2, 8, 0, 0, 10,
		"Portland", 9, 8, 8, 3, 2,
	
	1013, 1015, 315, FT, 30, 30, 30, 50, 50, 5, 10, 11, 0, 0,
		250, "Midway", 10, 14, 40, 24, 24,

	1000, 200, 90, BB, 0, 0, 1, 26, 18, 10, 3, 12, 0, 0, 73,
		"Yamato", 9, 18, 12, 14, 6,
	990, 190, 90, BB, 0, 0, 0, 12, 5, 8, 2, 12, 0, 0, 33,
		"Nagato", 8, 16, 8, 13, 3,
	1010, 190, 90, BB, 0, 0, 0, 12, 5, 8, 2, 12, 0, 0, 33,
		"Mutu", 8, 16, 8, 13, 3,
	990, 200, 90, BB, 0, 0, 0, 11, 5, 9, 2, 12, 0, 0, 30,
		"Ise", 12, 14, 8, 12, 3,
	1010, 200, 90, BB, 0, 0, 3, 11, 5, 9, 2, 12, 0, 0, 30,
		"Hyuga", 12, 14, 8, 12, 3,
	1000, 190, 90, CV, 10, 7, 9, 2, 2, 1, 1, 12, 0, 0, 7,
		"Hosho", 4, 5, 1, 0, 0,
	1000, 180, 90, LC, 0, 0, 0, 1, 1, 1, 1, 12, 0, 0, 5,
		"Naka", 7, 5, 1, 2, 0,
	
	700, 700, 135, CV, 26, 22, 25, 6, 4, 3, 3, 19, 0, 0, 27,
		"Akagi", 10, 8, 12, 2, 1,
	690, 710, 135, CV, 26, 22, 25, 6, 4, 3, 3, 19, 0, 0, 27,
		"Kaga", 10, 8, 12, 2, 1,
	690, 690, 135, CV, 21, 21, 21, 3, 2, 0, 3, 19, 0, 0, 10,
		"Soryu", 0, 0, 12, 0, 0,
	680, 700, 135, CV, 21, 21, 21, 3, 2, 0, 3, 19, 0, 0, 10,
		"Hiryu", 0, 0, 12, 0, 0,
	690, 700, 135, BB, 0, 0, 0, 7, 5, 7, 2, 19, 0, 0, 29,
		"Haruna", 8, 14, 8, 8, 3,
	700, 710, 135, BB, 0, 0, 0, 7, 5, 7, 2, 19, 0, 0, 29,
		"Kirisima", 8, 14, 8, 8, 3,
	700, 690, 135, HC, 0, 0, 0, 2, 2, 3, 2, 19, 0, 0, 9,
		"Chickuma", 12, 8, 8, 2, 2,
	680, 710, 135, HC, 0, 0, 0, 2, 2, 3, 2, 19, 0, 0, 9,
		"Tone", 12, 8, 8, 2, 2,
	680, 690, 135, LC, 0, 0, 0, 1, 1, 1, 1, 19, 0, 0, 5,
		"Nagara", 7, 5, 1, 2, 0,

	1030, 300, 90, HC, 0, 0, 1, 4, 3, 3, 2, 28, 0, 0, 10,
		"Atago", 10, 8, 8, 4, 3,
	1020, 300, 90, HC, 0, 0, 0, 4, 3, 3, 2, 28, 0, 0, 10,
		"Chokai", 10, 8, 8, 4, 3,
	1040, 300, 90, HC, 0, 0, 0, 4, 3, 3, 2, 28, 0, 0, 10,
		"Takao", 10, 8, 8, 4, 3,
	1050, 300, 90, HC, 0, 0, 0, 4, 3, 3, 2, 28, 0, 0, 10,
		"Maya", 10, 8, 8, 4, 3,
	1036, 305, 90, CV, 9, 7, 8, 2, 2, 0, 3, 28, 0, 0, 7,
		"Zuiho", 0, 0, 12, 2, 1,
	1030, 280, 90, LC, 0, 0, 0, 1, 1, 1, 1, 28, 0, 0, 5,
		"Isuzu", 7, 5, 1, 2, 0,
	1040, 280, 90, LC, 0, 0, 0, 1, 1, 1, 1, 28, 0, 0, 5,
		"Natori", 7, 5, 1, 2, 0,
	1030, 290, 90, LC, 0, 0, 0, 1, 1, 1, 1, 28, 0, 0, 5,
		"Kinu", 7, 5, 1, 2, 0,
	1040, 290, 90, LC, 0, 0, 0, 1, 1, 1, 1, 28, 0, 0, 5,
		"Yura", 7, 5, 1, 2, 0,

	250, 400, 135, BB, 0, 0, 1, 11, 4, 9, 2, 37, 0, 0, 29,
		"Huso", 12, 14, 8, 12, 2,
	240, 390, 135, BB, 0, 0, 1, 11, 4, 9, 2, 37, 0, 0, 29,
		"Yamasiro", 12, 14, 8, 12, 2,
	250, 390, 135, BB, 0, 0, 0, 7, 5, 7, 2, 37, 0, 0, 29,
		"Kongo", 8, 14, 8, 8, 3,
	240, 400, 135, BB, 0, 0, 0, 7, 5, 7, 2, 37, 0, 0, 29,
		"Hiei", 8, 14, 8, 8, 3,
	230, 400, 135, LC, 0, 0, 0, 1, 1, 1, 1, 37, 0, 0, 5,
		"Kitakami", 7, 5, 1, 2, 0,
	250, 380, 135, LC, 0, 0, 0, 1, 1, 1, 1, 37, 0, 0, 5,
		"Kiso", 7, 5, 1, 2, 0,

	200, 1200, 180, CV, 27, 13, 13, 3, 2, 0, 3, 43, 0, 0, 10,
		"Ryujo", 0, 0, 12, 0, 0,
	190, 1200, 180, CV, 13, 8, 8, 2, 2, 0, 2, 43, 0, 0, 7,
		"Junyo", 0, 0, 8, 0, 0,
	195, 1210, 180, HC, 0, 0, 0, 3, 2, 3, 2, 43, 0, 0, 10,
		"Asigara", 10, 8, 8, 3, 2,
	195, 1190, 180, HC, 0, 0, 0, 3, 2, 3, 2, 43, 0, 0, 10,
		"Haguro", 10, 8, 8, 3, 2,
	
	1100, 600, 45, LC, 0, 0, 1, 1, 1, 1, 1, 47, 0, 0, 5,
		"Jintsu", 7, 5, 1, 2, 0,

	1200, 700, 45, HC, 0, 0, 1, 2, 2, 4, 2, 48, 0, 0, 9,
		"Kumano", 15, 8, 8, 2, 2,
	1200, 690, 45, HC, 0, 0, 0, 2, 2, 4, 2, 48, 0, 0, 9,
		"Mikuma", 15, 8, 8, 2, 2,
	1210, 690, 45, HC, 0, 0, 0, 2, 2, 4, 2, 48, 0, 0, 9,
		"Mogami", 15, 8, 8, 2, 2,
	1210, 700, 45, HC, 0, 0, 0, 2, 2, 4, 2, 48, 0, 0, 9,
		"Suzuya", 15, 8, 8, 2, 2
};
SHAR_EOF
if test 10640 -ne "`wc -c midway/globals.h`"
then
echo shar: error transmitting midway/globals.h '(should have been 10640 characters)'
fi
cat << \SHAR_EOF > midway/makefile
# Leave in the -O blast you!

CC= cc
CFLAGS= -O
FILES= airstrike.c etc.c midway.c movebombs.c moveships.c screen.c
OBJS= airstrike.o etc.o midway.o movebombs.o moveships.o screen.o
OTHERFILES= makefile externs.h globals.h Midway.doc
JUNKFILES= Midway fluff junk arch tags
LIBS= -lcurses -ltermlib 
PUB= /usr/public

.c.o:; ${CC} ${CFLAGS} -c $<

Midway: ${OBJS}
	cc ${OBJS} ${CFLAGS} ${LIBS} -o Midway

Cory: ${OBJS}
	cc ${OBJS} ${CFLAGS} ${LIBS} -i -o Cory

${OBJS}: externs.h

midway.o: globals.h

arch:
	ar uv MID.a ${FILES} ${OTHERFILES} 
	touch arch

profile: ${OBJS}
	cc -p -i ${OBJS} ${CFLAGS} ${LIBS} -o Midway.pro

install: ${PUB}/Midway ${PUB}/Midway.doc
${PUB}/Midway: Midway
	strip Midway
	cp Midway ${PUB}/Midway
	chmod 755 ${PUB}/Midway
	cp /dev/null ${PUB}/.midwaylog
	chmod 666 ${PUB}/.midwaylog
${PUB}/Midway.doc: Midway.doc
	cp Midway.doc ${PUB}/Midway.doc
	chmod 644 ${PUB}/Midway.doc

clean: arch
	rm -f ${OBJS} ${FILES} ${OTHERFILES} ${JUNKFILES}
	pack MID.a
SHAR_EOF
if test 980 -ne "`wc -c midway/makefile`"
then
echo shar: error transmitting midway/makefile '(should have been 980 characters)'
fi
#	End of shell archive
exit 0
